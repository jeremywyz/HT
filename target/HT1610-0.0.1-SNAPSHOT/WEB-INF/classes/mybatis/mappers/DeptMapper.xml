<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.tarena.ht.mapper.DeptMapper">
	
	<!--查询部门全部列表信息  -->
	<select id="findAll" resultMap="deptRM">
		SELECT d.dept_id,d.parent_id,d.dept_name,d.state,p.dept_name AS p_name  FROM 
(SELECT * FROM dept_p)d
        LEFT JOIN
(SELECT * FROM dept_p)p
        ON d.parent_id=p.dept_id
 ORDER BY dept_id
	</select>
	
	
	<resultMap type="Dept" id="deptRM" autoMapping="true">
		<id column="DEPT_ID" property="deptId"/>
		
		<!--封装上级部门信息   一对一封装  -->
		<association property="parentDept" javaType="Dept">
			<id column="PARENT_ID" property="deptId"/>
			<result column="P_NAME" property="deptName"/>
		</association>
	</resultMap>
	
	<!--状态的修改  
		简化遍历操作
		open="(" close=")"
	-->
	<update id="updateState" >
		update dept_p set state = #{state} where dept_id in (
		<foreach collection="deptIds"  item="id" separator=",">
			#{id}
		</foreach>
		)
	</update>
	
	
	<!--批量删除  -->
	<delete id="delteDepts">
		DELETE FROM dept_p WHERE dept_id IN (
		<foreach collection="array" item="id" separator="," >
			#{id}
		</foreach>
		)
	</delete>
	
	
	<insert id="saveDept">
		insert into dept_p values(
			#{deptId},
			#{parentDept.deptId},
			#{deptName},
			#{state},
			#{createBy,jdbcType=VARCHAR},
			#{createDept,jdbcType=VARCHAR},
			#{createTime,jdbcType=DATE},
			#{updateBy,jdbcType=VARCHAR},
			#{updateTime,jdbcType=DATE}
		)
	</insert>
	
	
	<!--根据Id查询单个用户  -->
	<select id="findOne" resultMap="deptRM">
		SELECT d.dept_id,d.parent_id,d.dept_name,d.state,p.dept_name AS p_name  FROM 
(SELECT * FROM dept_p)d
        LEFT JOIN
(SELECT * FROM dept_p)p
        ON d.parent_id=p.dept_id
 WHERE d.dept_id=#{deptId}
	</select>
	
	
	<select id="findParentDeptList" resultType="Dept">
		SELECT * FROM dept_p WHERE dept_id  NOT in (#{deptId})
	</select>
	
	<update id="updateDept">
		update dept_p 
		<set>
			parent_id = #{parentDept.deptId},
			dept_name = #{deptName},
			state = #{state},
			create_by = #{createBy,jdbcType=VARCHAR},
			create_dept = #{createDept,jdbcType=VARCHAR},
		<if test="createTime !=null">create_time = #{createTime,jdbcType=DATE},</if>	
			update_by = #{updateBy,jdbcType=VARCHAR},
			update_time = #{updateTime,jdbcType=DATE}
		</set>
		
		where dept_Id = #{deptId}
	</update>
	
</mapper>